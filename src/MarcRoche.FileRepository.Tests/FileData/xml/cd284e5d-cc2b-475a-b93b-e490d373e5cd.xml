<BlogPost title="IEnumerable vs IQueryable" publishdate="7/6/2011 12:00:00 AM" id="cd284e5d-cc2b-475a-b93b-e490d373e5cd" author="">
  <Content>
    <div>
      <p>
        <strong>
          <em>"What is the difference between IEnumerable&lt;T&gt; and IQueryable&lt;T&gt;?"</em>
        </strong>
      </p>
      <p>This is a question that all developers using Linq will at some point ask, especially if they are working with Entity Framework!</p>
      <p>IEnumerable&lt;T&gt; and IQueryable&lt;T&gt; are quite similar, in fact IQueryable&lt;T&gt; implements IEnumerable&lt;T&gt;:</p>
      <pre><![CDATA[
public interface IQueryable&lt;out T&gt; : IEnumerable&lt;T&gt;, IQueryable, IEnumerable
	  ]]></pre>
      <p>So let's explore the differences and similarities and when should you use one or the other.</p>
      <p>For starters both have deferred execution. This means that neither will actually execute until it is enumerated over.</p>
      <p>IQueryable&lt;T&gt; has an underlying Query Provider and Query Expression. The Query Provider knows how to take the Query Expression and convert it to code that is executable in another context. The Query Expression is a tree of conditional operations that will be converted by the Query Provider into executable code of some sort.</p>
      <p>IEnumerable&lt;T&gt; will execute in memory fetching all objects in the entire collection and only then perform any required query conditions.</p>
      <p>IQueryable&lt;T&gt; will execute in the context of the Query Provider if possible. For instance, if the Query Provider is Linq to Entities, the provider will translated the Query Expression to SQL and execute the query natively in SQL Server. Only the selected rows will be returned to the calling program.</p>
      <p>This is an important distinction. Consider a situation where you have thousands or millions of rows of data in a database and you perform a query against it. In the context of IEnumerable&lt;T&gt;, all rows will be returned from the database  and only then will any query conditions be applied.</p>
      <p>In the case of IQueryable&lt;T&gt; the Query Provider will take the Query Expression and translate this into SQL. The SQL will then be responsible for determining how many rows will be returned. This could result in tremendous performance increases if the database is large.</p>
    </div>
  </Content>
</BlogPost>